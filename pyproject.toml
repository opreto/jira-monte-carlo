[project]
name = "jira-monte-carlo"
version = "0.1.0"
description = "High-performance Monte Carlo simulation for Jira project forecasting"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "click>=8.1.7",
    "rich>=13.7.0",
    "plotly>=5.18.0",
    "jinja2>=3.1.3",
    "pydantic>=2.5.0",
    "polars>=0.20.0",
    "multiprocessing-logging>=0.3.4",
    "tqdm>=4.66.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.1.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pytest-mock>=3.12.0",
    "faker>=22.0.0",
]

[project.scripts]
jira-monte-carlo = "src.presentation.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]